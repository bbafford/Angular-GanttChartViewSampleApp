{"ast":null,"code":"var GanttChartView = DlhSoft.Controls.GanttChartView;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./staffing-list.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../DlhSoft/DlhSoft.ProjectData.GanttChart.Angular.Components\";\nimport * as i4 from \"@angular/material/button\";\nexport let StaffingListComponent = /*#__PURE__*/(() => {\n  class StaffingListComponent {\n    constructor(ticketService, http) {\n      this.title = 'GanttChartView sample';\n      this.items = [];\n      this.gcv = DlhSoft.Controls.GanttChartView;\n      this.staffing = [];\n      this.staffingService = ticketService;\n      this.http = http;\n    }\n\n    ngOnInit() {\n      this.staffing = this.staffingService.getStaff();\n      this.drawChart();\n      this.http.get('http://localhost:3000/staffing').subscribe(data => {\n        this.staffing = data;\n        console.log(\"staffing object\", this.staffing.length, this.staffing);\n\n        for (let i = 0; i < this.staffing.length; i++) {\n          console.log(\"engineering \", i, this.staffing[i].engineer);\n          this.items.push({\n            content: this.staffing[i].engineer,\n            indentation: 0,\n            start: new Date(2022, 1, 1, 0)\n          });\n\n          for (let j = 0; j < this.staffing[i].projects.length; j++) {\n            console.log(\"projects\", this.staffing[i].projects[j]);\n            this.items.push({\n              content: this.staffing[i].projects[j].project,\n              indentation: 1,\n              start: new Date(this.staffing[i].projects[j].start),\n              finish: new Date(this.staffing[i].projects[j].finish)\n            });\n          }\n        }\n\n        console.log(\"after items is setup: \", this.items);\n        DlhSoft.Controls.GanttChartView.initialize(this.ganttChartView, this.items, this.settings).refresh;\n      });\n      this.staffingSubs = this.staffingService.getTicketUpdateListener().subscribe(staffing => {\n        /*\r\n         console.log(\"staffing object\", this.staffing.length, this.staffing)\r\n                  for(let i=0;i< this.staffing.length;i++){\r\n           console.log(\"engineering \", this.staffing[i].engineer)\r\n                    this.items.push({ content: this.staffing[i].engineer,indentation: 1, start: new Date (2022,1,1,0)})\r\n           \r\n          // for (let project of this.staffing[i].engineer.projects) {\r\n          //   console.log(\"projects\", project)\r\n          //   this.items.push({ content: project.project,indentation: 2, start: project.start, finish: project.finish})\r\n          // }\r\n         }\r\n         console.log(\"after items is setup: \", this.items)\r\n        DlhSoft.Controls.GanttChartView.initialize(this.ganttChartView, this.items, this.settings).refresh;\r\n        */\n      });\n    }\n\n    setupItems() {\n      console.log(\"before setup item\", this.staffing);\n\n      for (let engineer of this.staffing) {\n        console.log(\"engineering \", engineer);\n        this.items.push({\n          content: engineer,\n          indentation: 1,\n          start: new Date(2022, 1, 1, 0)\n        });\n\n        for (let project of engineer.projects) {\n          console.log(\"projects\", project);\n          this.items.push({\n            content: project.project,\n            indentation: 2,\n            start: project.start,\n            finish: project.finish\n          });\n        }\n      }\n\n      console.log(\"setup items:\", this.items);\n    }\n\n    ngOnDestroy() {\n      this.staffingSubs.unsubscribe();\n    }\n\n    drawChart() {\n      // this.items.push(\n      //   { content: 'VTA', indentation: 1, start: new Date(2022, 4, 1, 8), finish: new Date(2022, 5, 1, 12), assignmentsContent: 'Resource 2 [50%]'})\n\n      /*\r\n      { content: 'SAT Milestone', indentation: 2,  finish: new Date(2022, 4 , 12, 16), isMilestone:true },\r\n      { content: 'Missolua', indentation: 1, start: new Date(2022, 4, 1, 8), finish: new Date(2022, 7, 1, 12)},\r\n      { content: 'Brent Clayton' },\r\n      { content: 'JTA', indentation: 1, start: new Date(2022, 4, 1, 8), finish: new Date(2022, 5, 1, 12)},\r\n      { content: 'GRTC', indentation: 1, start: new Date(2022, 4, 1, 8), finish: new Date(2022, 7, 1, 12)},\r\n      { content: 'XXXX', indentation: 1, start: new Date(2022, 4, 1, 8), finish: new Date(2022, 7, 1, 12)},\r\n      { content: 'Nate G' },\r\n      { content: 'PHX', indentation: 1, start: new Date(2022, 4, 1, 8), finish: new Date(2022, 7, 1, 12)},\r\n      { content: 'Arnaud' },\r\n      { content: 'BBB', indentation: 1, start: new Date(2022, 4, 1, 8), finish: new Date(2022, 7, 1, 12)},\r\n      { content: 'Santa Cruz', indentation: 1, start: new Date(2022, 4, 1, 8), finish: new Date(2022, 7, 1, 12)},\r\n      ];\r\n        /*\r\n      { content: 'Pierce System Acceptance', indentation: 2,start: new Date(2020, 2 - 1, 16, 8), finish: new Date(2021,5 - 1, 16,8), isMilestone: true },\r\n      { content: 'CloseOut', indentation: 2, finish: new Date(2021,5 - 1, 16,8), isMilestone: true }\r\n          { content: 'Branded Responsive Website', indentation: 1, start: new Date(2020, 2 - 1, 11, 8), finish: new Date(2020, 2 - 1, 12, 12), completedFinish: new Date(2020, 2 - 1, 12, 12), assignmentsContent: 'Resource 1', baselineStart: new Date(2020, 2 - 1, 10, 8), baselineFinish: new Date(2016, 2 - 1, 11, 16) },\r\n      { content: 'Pierce Branded Responsive Website part 1', indentation: 2, start: new Date(2020, 2 - 1, 12, 8), finish: new Date(2020, 2 - 1, 12, 16), assignmentsContent: 'Landon' },\r\n      { content: 'Pierce Branded Responsive Website part 2', indentation: 2, start: new Date(2020, 5 - 1, 12, 8), finish: new Date(2020, 2 - 1, 12, 16), assignmentsContent: 'Landon' },\r\n      \r\n      { content: 'Story B' },\r\n      { content: 'Task 3', indentation: 1, start: new Date(2020, 2 - 1, 15, 8), finish: new Date(2020, 2 - 1, 15, 16), completedFinish: new Date(2020, 2 - 1, 15, 12), assignmentsContent: 'Resource 2 [50%]'},\r\n      { content: 'Task 4', indentation: 1, start: new Date(2020, 2 - 1, 15, 8), finish: new Date(2020, 2 - 1, 16, 16), assignmentsContent: 'Resource 2' },\r\n      { content: 'Task 5', indentation: 1, start: new Date(2020, 2 - 1, 16, 8), finish: new Date(2020, 2 - 1, 17, 16) },\r\n      { content: 'Task 6', indentation: 1, start: new Date(2020, 2 - 1, 16, 8), finish: new Date(2020, 2 - 1, 19, 16) }\r\n      */\n      //  ];\n      //  items[2].predecessors = <PredecessorItem[]>[{item: items[1], dependencyType: 'StartStart' } ]\n      // items[2].predecessors = <PredecessorItem[]>[{ item: items[1] }]; // Task 2 depends on Task 1.\n      // items[7].predecessors = <PredecessorItem[]>[{ item: items[6], dependencyType: 'StartStart' }]; // Task 6 depends on Task 5 using Start-Start dependency type.\n      // items[8].predecessors = <PredecessorItem[]>[{ item: items[0] }, { item: items[3] }]; // Milestone depends on Story A and Story B.\n      //this.items = items;\n      var settings = {\n        // Auto-scheduling is initially turned on.\n        areTaskDependencyConstraintsEnabled: true,\n        // Other settings that you can enable and customize as needed in your application.\n        // isGridVisible: false,\n        // gridWidth: '30%',\n        // chartWidth: '70%',\n        // isGridReadOnly: true,\n        // isChartReadOnly: true,\n        // isVirtualizing: false,\n        // isTaskEffortPreservedWhenStartChangesInGrid: true,\n        // border: 'Gray',\n        // gridLines: 'LightGray',\n        // standardBarStyle: 'stroke: Green; fill: LightGreen',\n        // standardCompletedBarStyle: 'stroke: DarkGreen; fill: DarkGreen',\n        // dependencyLineStyle: 'stroke: Green; fill: none; marker-end: url(#ArrowMarker)',\n        // alternativeItemStyle: 'background-color: #f9f9f9', alternativeChartItemStyle: 'fill: #f9f9f9',\n        // itemTemplate: (item) => {\n        //     var toolTip = document.createElementNS('http://www.w3.org/2000/svg', 'title');\n        //     var toolTipContent = item.content + ' • ' + 'Start: ' + item.start.toLocaleString();\n        //     if (!item.isMilestone)\n        //         toolTipContent += ' • ' + 'Finish: ' + item.finish.toLocaleString();\n        //     toolTip.appendChild(document.createTextNode(toolTipContent));\n        //     return toolTip;\n        // },\n        currentTime: new Date(2022, 4 - 1, 12) // Display the current time vertical line of the chart at the project start date.\n\n      }; // Define schedule.\n      // settings.schedule = {\n      //      workingWeekStart: 1, workingWeekFinish: 5, // Monday - Friday\n      //      visibleDayStart: 8 * 60 * 60 * 1000, visibleDayFinish: 16 * 60 * 60 * 1000 // 8 AM - 4 PM\n      //      // , specialNonworkingDays: [new Date(2016, 2 - 1, 19), new Date(2016, 2 - 1, 21)] // excluded\n      // };\n      // var specialSchedule = <GanttChartView.Schedule>{\n      //      workingWeekStart: 0, workingWeekFinish: 3, // Sunday - Wednesday\n      //      workingDayStart: 9 * 60 * 60 * 1000, workingDayFinish: 19 * 60 * 60 * 1000 // 9 AM - 7 PM, exceeding visible 4 PM\n      //      // , specialNonworkingDays: [new Date(2016, 2 - 1, 18), new Date(2016, 2 - 1, 21), new Date(2016, 2 - 1, 22)] // partial replacement for excluded dates\n      // };\n      // items[4].schedule = specialSchedule;\n      // items[5].schedule = specialSchedule;\n      // Configure selection.\n      // settings.selectionMode = 'Extended'; // Supported values: None, Focus (default), Single, Extended, ExtendedFocus.\n      // settings.selectedItemStyle = 'background: LightCyan';\n      // items[6].isSelected = true;\n      // Customize columns.\n\n      var columns = GanttChartView.getDefaultColumns(this.items, settings);\n      var indexOffset = columns[0].isSelection ? 1 : 0; // columns[0 + indexOffset].header = 'Work items';\n      // columns[0 + indexOffset].width = 240;\n\n      columns.splice(0 + indexOffset, 0, {\n        header: '',\n        width: 40,\n        cellTemplate: GanttChartView.getIndexColumnTemplate()\n      });\n      columns.splice(3 + indexOffset, 0, {\n        header: 'Effort (h)',\n        width: 80,\n        cellTemplate: GanttChartView.getTotalEffortColumnTemplate(64)\n      });\n      columns.splice(4 + indexOffset, 0, {\n        header: 'Duration (d)',\n        width: 80,\n        cellTemplate: GanttChartView.getDurationColumnTemplate(64, 8)\n      });\n      columns.splice(8 + indexOffset, 0, {\n        header: '%',\n        width: 80,\n        cellTemplate: GanttChartView.getCompletionColumnTemplate(64)\n      });\n      columns.splice(9 + indexOffset, 0, {\n        header: 'Predecessors',\n        width: 100,\n        cellTemplate: GanttChartView.getPredecessorsColumnTemplate(84)\n      });\n      columns.push({\n        header: 'Cost ($)',\n        width: 100,\n        cellTemplate: GanttChartView.getCostColumnTemplate(84)\n      });\n      columns.push({\n        header: 'Est. start',\n        width: 140,\n        cellTemplate: GanttChartView.getBaselineStartColumnTemplate(124, true, true, 8 * 60 * 60 * 1000)\n      }); // 8 AM\n\n      columns.push({\n        header: 'Est. finish',\n        width: 140,\n        cellTemplate: GanttChartView.getBaselineFinishColumnTemplate(124, true, true, 16 * 60 * 60 * 1000)\n      }); // 4 PM\n      // items[7]['description'] = 'Custom description';\n      // columns.push({ header: 'Description', width: 200, cellTemplate: (item) => { return item['ganttChartView'].ownerDocument.createTextNode(item['description']); } });\n      // columns[10 + indexOffset].cellTemplate = GanttChartView.getAssignmentSelectorColumnTemplate(184, (item) { return ['Resource 1', 'Resource 2'] });\n      // items[7]['targetDate'] = new Date(2016, 2 - 1, 28, 12, 0, 0);\n      // columns.push({ header: 'Target date', width: 140, cellTemplate: (item)  => {\n      //     return GanttChartView.datePickerInputColumnTemplateBase(item['ganttChartView'].ownerDocument, 140,\n      //         function () { return GanttChartView.getInputDate(item['targetDate']); }, \n      //         function (value) { item['targetDate'] = GanttChartView.getOutputDate(value); }); } });\n\n      settings.columns = columns;\n      this.settings = settings; //var ganttChartView = document.querySelector('#ganttChartView');\n      //this.gcv=DlhSoft.Controls.GanttChartView.initialize(ganttChartView, this.items, settings)\n      //DlhSoft.Controls.GanttChartView.initialize(this.ganttChartView, this.items, settings).refresh;\n\n      this.ganttChartView = document.getElementById(\"staffing-gnattViewChart\");\n\n      this.onItemChanged = (item, propertyName, isDirect, isFinal) => {\n        if (!isDirect || !isFinal) // Skip internal changes, and changes occurred during drag operations.\n          return;\n        console.log(propertyName + ' changed for ' + item.content + '.');\n      };\n    }\n\n  }\n\n  StaffingListComponent.ɵfac = function StaffingListComponent_Factory(t) {\n    return new (t || StaffingListComponent)(i0.ɵɵdirectiveInject(i1.StaffingService), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n\n  StaffingListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StaffingListComponent,\n    selectors: [[\"app-staffing-list\"]],\n    decls: 12,\n    vars: 1,\n    consts: [[\"id\", \"staffing-gnattViewChart\"], [2, \"min-height\", \"388px\", 3, \"change\"], [\"mat-button\", \"\"]],\n    template: function StaffingListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"staffing-list works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"body\")(3, \"h1\");\n        i0.ɵɵtext(4, \"Staffing For the future\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 0)(6, \"ganttchartview\", 1);\n        i0.ɵɵtext(7, \"...\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"button\", 2);\n        i0.ɵɵtext(9, \"Commit Changes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"button\", 2);\n        i0.ɵɵtext(11, \"Discard Changes\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"change\", ctx.onItemChanged);\n      }\n    },\n    directives: [i3.GanttChartView, i4.MatButton],\n    styles: [\"\", \"[_nghost-%COMP%] {\\n      font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, Helvetica, Arial, sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\";\\n      font-size: 14px;\\n      color: #333;\\n      box-sizing: border-box;\\n      -webkit-font-smoothing: antialiased;\\n      -moz-osx-font-smoothing: grayscale;\\n    }\\n  \\n    h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%] {\\n      margin: 8px 0;\\n    }\\n  \\n    p[_ngcontent-%COMP%] {\\n      margin: 0;\\n    }\\n  \\n    .spacer[_ngcontent-%COMP%] {\\n      flex: 1;\\n    }\\n  \\n    .toolbar[_ngcontent-%COMP%] {\\n      height: 60px;\\n      margin: -8px;\\n      display: flex;\\n      align-items: center;\\n      background-color: #1976d2;\\n      color: white;\\n      font-weight: 600;\\n    }\\n  \\n    .toolbar[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n      margin: 0 16px;\\n    }\\n  \\n    .toolbar[_ngcontent-%COMP%]   #twitter-logo[_ngcontent-%COMP%] {\\n      height: 40px;\\n      margin: 0 16px;\\n    }\\n  \\n    .toolbar[_ngcontent-%COMP%]   #twitter-logo[_ngcontent-%COMP%]:hover {\\n      opacity: 0.8;\\n    }\\n  \\n    .content[_ngcontent-%COMP%] {\\n      display: flex;\\n      margin: 32px auto;\\n      padding: 0 16px;\\n      max-width: 960px;\\n      flex-direction: column;\\n      align-items: center;\\n    }\\n  \\n    svg.material-icons[_ngcontent-%COMP%] {\\n      height: 24px;\\n      width: auto;\\n    }\\n  \\n    svg.material-icons[_ngcontent-%COMP%]:not(:last-child) {\\n      margin-right: 8px;\\n    }\\n  \\n    .card[_ngcontent-%COMP%]   svg.material-icons[_ngcontent-%COMP%]   path[_ngcontent-%COMP%] {\\n      fill: #888;\\n    }\\n  \\n    .card-container[_ngcontent-%COMP%] {\\n      display: flex;\\n      flex-wrap: wrap;\\n      justify-content: center;\\n      margin-top: 16px;\\n    }\\n  \\n    .card[_ngcontent-%COMP%] {\\n      border-radius: 4px;\\n      border: 1px solid #eee;\\n      background-color: #fafafa;\\n      height: 40px;\\n      width: 200px;\\n      margin: 0 8px 16px;\\n      padding: 16px;\\n      display: flex;\\n      flex-direction: row;\\n      justify-content: center;\\n      align-items: center;\\n      transition: all 0.2s ease-in-out;\\n      line-height: 24px;\\n    }\\n  \\n    .card-container[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]:not(:last-child) {\\n      margin-right: 0;\\n    }\\n  \\n    .card.card-small[_ngcontent-%COMP%] {\\n      height: 16px;\\n      width: 168px;\\n    }\\n  \\n    .card-container[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]:not(.highlight-card) {\\n      cursor: pointer;\\n    }\\n  \\n    .card-container[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]:not(.highlight-card):hover {\\n      transform: translateY(-3px);\\n      box-shadow: 0 4px 17px rgba(black, 0.35);\\n    }\\n  \\n    .card-container[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]:not(.highlight-card):hover   .material-icons[_ngcontent-%COMP%]   path[_ngcontent-%COMP%] {\\n      fill: rgb(105, 103, 103);\\n    }\\n  \\n    .card.highlight-card[_ngcontent-%COMP%] {\\n      background-color: #1976d2;\\n      color: white;\\n      font-weight: 600;\\n      border: none;\\n      width: auto;\\n      min-width: 30%;\\n      position: relative;\\n    }\\n  \\n    .card.card.highlight-card[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n      margin-left: 60px;\\n    }\\n  \\n    svg#rocket[_ngcontent-%COMP%] {\\n      width: 80px;\\n      position: absolute;\\n      left: -10px;\\n      top: -24px;\\n    }\\n  \\n    svg#rocket-smoke[_ngcontent-%COMP%] {\\n      height: 100vh;\\n      position: absolute;\\n      top: 10px;\\n      right: 180px;\\n      z-index: -10;\\n    }\\n  \\n    a[_ngcontent-%COMP%], a[_ngcontent-%COMP%]:visited, a[_ngcontent-%COMP%]:hover {\\n      color: #1976d2;\\n      text-decoration: none;\\n    }\\n  \\n    a[_ngcontent-%COMP%]:hover {\\n      color: #125699;\\n    }\\n  \\n    .terminal[_ngcontent-%COMP%] {\\n      position: relative;\\n      width: 80%;\\n      max-width: 600px;\\n      border-radius: 6px;\\n      padding-top: 45px;\\n      margin-top: 8px;\\n      overflow: hidden;\\n      background-color: rgb(15, 15, 16);\\n    }\\n  \\n    .terminal[_ngcontent-%COMP%]::before {\\n      content: \\\"\\\\2022 \\\\2022 \\\\2022\\\";\\n      position: absolute;\\n      top: 0;\\n      left: 0;\\n      height: 4px;\\n      background: rgb(58, 58, 58);\\n      color: #c2c3c4;\\n      width: 100%;\\n      font-size: 2rem;\\n      line-height: 0;\\n      padding: 14px 0;\\n      text-indent: 4px;\\n    }\\n  \\n    .terminal[_ngcontent-%COMP%]   pre[_ngcontent-%COMP%] {\\n      font-family: SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;\\n      color: white;\\n      padding: 0 1rem 1rem;\\n      margin: 0;\\n    }\\n  \\n    .circle-link[_ngcontent-%COMP%] {\\n      height: 40px;\\n      width: 40px;\\n      border-radius: 40px;\\n      margin: 8px;\\n      background-color: white;\\n      border: 1px solid #eeeeee;\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      cursor: pointer;\\n      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\\n      transition: 1s ease-out;\\n    }\\n  \\n    .circle-link[_ngcontent-%COMP%]:hover {\\n      transform: translateY(-0.25rem);\\n      box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\\n    }\\n  \\n    footer[_ngcontent-%COMP%] {\\n      margin-top: 8px;\\n      display: flex;\\n      align-items: center;\\n      line-height: 20px;\\n    }\\n  \\n    footer[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n      display: flex;\\n      align-items: center;\\n    }\\n  \\n    .github-star-badge[_ngcontent-%COMP%] {\\n      color: #24292e;\\n      display: flex;\\n      align-items: center;\\n      font-size: 12px;\\n      padding: 3px 10px;\\n      border: 1px solid rgba(27,31,35,.2);\\n      border-radius: 3px;\\n      background-image: linear-gradient(-180deg,#fafbfc,#eff3f6 90%);\\n      margin-left: 4px;\\n      font-weight: 600;\\n      font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;\\n    }\\n  \\n    .github-star-badge[_ngcontent-%COMP%]:hover {\\n      background-image: linear-gradient(-180deg,#f0f3f6,#e6ebf1 90%);\\n      border-color: rgba(27,31,35,.35);\\n      background-position: -.5em;\\n    }\\n  \\n    .github-star-badge[_ngcontent-%COMP%]   .material-icons[_ngcontent-%COMP%] {\\n      height: 16px;\\n      width: 16px;\\n      margin-right: 4px;\\n    }\\n  \\n    svg#clouds[_ngcontent-%COMP%] {\\n      position: fixed;\\n      bottom: -160px;\\n      left: -230px;\\n      z-index: -10;\\n      width: 1920px;\\n    }\\n  \\n  \\n    \\n    @media screen and (max-width: 767px) {\\n  \\n      .card-container[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%]:not(.circle-link), .terminal[_ngcontent-%COMP%] {\\n        width: 100%;\\n      }\\n  \\n      .card[_ngcontent-%COMP%]:not(.highlight-card) {\\n        height: 16px;\\n        margin: 8px 0;\\n      }\\n  \\n      .card.highlight-card[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\\n        margin-left: 72px;\\n      }\\n  \\n      svg#rocket-smoke[_ngcontent-%COMP%] {\\n        right: 120px;\\n        transform: rotate(-5deg);\\n      }\\n    }\\n  \\n    @media screen and (max-width: 575px) {\\n      svg#rocket-smoke[_ngcontent-%COMP%] {\\n        display: none;\\n        visibility: hidden;\\n      }\\n    }\"]\n  });\n  return StaffingListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}